select * from film f




̣--ejercicio 1--
select * from film f
INNER JOIN inventory i on f.film_id = i.film_id
INNER JOIN store s on i.store_id = s.store_id
select * from film f
INNER JOIN inventory i on f.film_id = i.film_id
INNER JOIN store s on i.store_id = s.store_id
INNER JOIN address a on s.address_id = a.address_id  
INNER JOIN city c on a.city_id = c.city_id
INNER JOIN country co on c.country_id = co.country_id


̣--ejercicio 1--

select f.title, a.address, c.city, co.country from film f
INNER JOIN inventory i on f.film_id = i.film_id
INNER JOIN store s on i.store_id = s.store_id
INNER JOIN address a on s.address_id = a.address_id
INNER JOIN city c on a.city_id = c.city_id
INNER JOIN country co on c.country_id = co.country_id
WHERE f.title = 'ACE GOLDFINGER' 


̣--ejercicio 2--
select f.title, l.name, f.rating, f.length from film f
INNER JOIN film_category fi on f.film_id = fi.film_id
INNER JOIN language l on l.language_id = f.language_id
INNER JOIN category ca on fi.category_id = ca.category_id
WHERE f.length BETWEEN 60 AND 120 --el between sirve para poner un minimo y maximo de tiempo o de que quieras buscar en la lista--


̣--ejercicio 3--
select st.first_name, st.last_name,st.address_id,  c.city, co.country from film f
INNER JOIN inventory i on f.film_id = i.film_id
INNER JOIN store s on i.store_id = s.store_id
INNER JOIN city c on a.city_id = c.city_id
INNER JOIN country co on c.country_id = co.country_id
INNER JOIN address a on s.address_id = a.address_id
INNER JOIN staff st on a.address_id = st.address_id



̣--ejercicio 4--
select f.title, min(return_date) AS 'fecha_min', max(rental_date) AS 'fecha_max' from film f --el AS sirve para renombrar algo que quieras tener. el min y el max sirve para poner un minimo de fecha o numero  y el maximo sirve para poner un maximo de fecha o numero entre los () va lo que quieras mostrar en este caso la columna de la fecha de inicio  y la fecha cuando se tiene q entegar--
INNER JOIN inventory i on f.film_id = i.film_id
INNER JOIN rental r on i.store_id = r.rental_id



--si se puede unir todas las tablas pero son muchos inner join--

̣--ejercicio 5--
select * from film f
INNER JOIN inventory i on f.film_id = i.film_id
INNER JOIN rental r on i.store_id = r.rental_id
INNER JOIN store s on i.store_id = s.store_id
INNER JOIN city c on a.city_id = c.city_id
INNER JOIN country co on c.country_id = co.country_id
INNER JOIN address a on s.address_id = a.address_id
INNER JOIN staff st on a.address_id = st.address_id
INNER JOIN film_category fi on f.film_id = fi.film_id
INNER JOIN language l on l.language_id = f.language_id
INNER JOIN category ca on fi.category_id = ca.category_id
INNER JOIN film_category fi on f.film_id = fi.film_id
INNER JOIN payment p  on cu.customer_id = p.payment_id
INNER JOIN customer cu on a.address_id = cu.address_id
INNER JOIN film_text fil  on i.film_id = fil.film_id
INNER JOIN film_actor ac on f.film_id = ac.film_id
INNER JOIN actor act on ac.actor_id = act.actor_id


̣--ejercicio 6--

SELECT rating, count (*)  FROM film f
GROUP by rating
 

̣--ejercicio 7--

SELECT c.name, count (*)  FROM film f
INNER JOIN  film_category fi on fi.film_id = f.film_id
INNER JOIN category c on c.category_id = fi.category_id
GROUP by  c.name


̣--ejercicio 8--

SELECT  a.first_name, a.last_name, count (a.actor_id) AS "cont_actors", f.title   FROM film f
INNER JOIN  film_actor ac on ac.film_id = f.film_id
INNER JOIN 	actor a on a.actor_id = ac.actor_id
GROUP by ac.film_id
ORDER by  cont_actors DESC LIMIT 10

̣--ejercicio 9--

SELECT  c.city, co.country, count(i.film_id) AS "cont_copias" FROM  inventory i
INNER JOIN 	store s on s.store_id = i.store_id
INNER JOIN  address a on a.address_id = s.address_id
INNER JOIN  city c on c.city_id = a.city_id
INNER JOIN country co on co.country_id = c.country_id
GROUP by a.address_id



̣--ejercicio 10--

SELECT   f.rental_duration * f.rental_rate  AS "resultado" FROM  film f


̣--ejercicio 11--

SELECT   AVG(f.rental_duration * f.rental_rate)  AS "resultado", c.name FROM  film f
INNER JOIN film_category fi on fi.film_id = f.film_id
INNER JOIN category c on c.category_id = fi.category_id
GROUP BY c.category_id


̣--ejercicio 12--


SELECT  f.rental_duration AS "DIAS", f.rental_rate  AS "costo x dia",  (f.rental_duration * f.rental_rate)  AS "Costo total", min(return_date) AS 'fecha_min', max(rental_date) AS 'fecha_max' 
FROM  film f
INNER JOIN inventory i on i.film_id = f.film_id
INNER JOIN rental r on r.inventory_id = i.inventory_id
WHERE f.title = 'ALABAMA DEVIL' 
/*
13)Nombre, duración y categoria de todas
 las peliculas ordenados del más largo al más corto.
*/ 
SELECT 
    f.title AS nombre_pelicula,
    f.length AS duracion_minutos,
    c.name AS categoria
FROM film f
JOIN film_category fc ON f.film_id = fc.film_id
JOIN category c ON fc.category_id = c.category_id
ORDER BY f.length DESC;
/*
14)Nombre de las peliculas que arranquen
‘’w’’ con al menos 5 actores.
*/ 
SELECT f.title, count(fc.actor_id) as num_actor from film f
INNER JOIN film_actor fc on fc.film_id = f.film_id
WHERE f.title like "w%"
GROUP by fc.actor_id
HAVING num_actor >= 5

/*
CONCAT:se usa para unir dos o más cadenas de texto en una sola.(como unir dos letras de una tabla distinta en una sola)
COUNT:
*/
/*
15)
*/
SELECT   c.first_name, c.last_name,  sum(p.amount) as Suma_Total FROM payment p
INNER JOIN customer c on p.customer_id = c.customer_id
GROUP BY  c.first_name
/*
16)
*/
SELECT  f.title,  f.length, ac.first_name, ac.last_name FROM film f
INNER JOIN film_actor fi on fi.film_id = f.film_id
INNER JOIN actor ac on ac.actor_id = fi.actor_id
WHERE f.length < 47
/*
17)
*/
SELECT c.last_name, ci.city,a.address,  co.country, r.rental_date, sum(p.amount) FROM customer c
INNER JOIN address a on a.address_id = c.address_id
INNER JOIN city ci on ci.city_id = a.city_id
INNER JOIN country co on co.country_id = ci.country_id
INNER JOIN rental r on r.customer_id = c.customer_id
INNER JOIN payment p on p.staff_id = r.staff_id
ORDER BY  p.amount ASC
/*
18)
*/
INSERT INTO actor(actor_id,first_name,last_name,last_update)
values(201,"Santiago","Burzolino","2025-10-26 04:17:17" )
/*
19)
*/
INSERT INTO actor(actor_id,first_name,last_name,last_update)
values(202,"ELpi","Tito","2025-02-23 20:15:03"),(203,"Lamela","Torres","2025-02-23 20:16:30")
/*
20)
*/
UPDATE actor
SET first_name = "Brad",last_name =  "Pitt",last_update = "2026-02-23 10:12:07" 
WHERE actor_id = 201 
UPDATE actor
SET first_name = "Jason",last_name =  "Vorgues",last_update = "2023-06-16 11:13:17" 
WHERE actor_id = 202
UPDATE actor
SET first_name = "Freddy",last_name =  "Mercury",last_update = "2021-08-20 09:08:06" 
WHERE actor_id = 203
/*
21)
*/
DELETE actor
WHERE actor_id = 201
DELETE actor
WHERE actor_id = 202
DELETE actor
WHERE actor_id = 203